version: 0.2
run-as: root

phases:
  pre_build:
    commands:
      # Step 1: Fetch and store the secrets from AWS Secrets Manager
      - echo Fetching secrets from Secrets Manager...
      - aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:us-east-2:506452456940:secret:bolt-4Ug3Gv --query 'SecretString' --output text > .env
      - cat .env  # Verify the contents of the .env file

      # Step 2: Export the secrets as environment variables
      - export $(cat .env | jq -r 'to_entries | .[] | "\(.key)=\(.value)"' | xargs)  # Export as environment variables

  build:
    commands:
      # Step 3: Build the Docker image
      - echo Building the Docker image...
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG --build-arg GROQ_API_KEY=$GROQ_API_KEY --build-arg OPENAI_API_KEY=$OPENAI_API_KEY --build-arg ANTHROPIC_API_KEY=$ANTHROPIC_API_KEY --build-arg OPEN_ROUTER_API_KEY=$OPEN_ROUTER_API_KEY --build-arg GOOGLE_GENERATIVE_AI_API_KEY=$GOOGLE_GENERATIVE_AI_API_KEY --build-arg OLLAMA_API_BASE_URL=$OLLAMA_API_BASE_URL .

  post_build:
    commands:
      # Step 4: Push the Docker image to ECR
      - echo Build completed on `date`
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"%s","imageUri":"%s"}]' $CONTAINER_NAME $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG > imagedefinitions.json

artifacts:
  files: imagedefinitions.json

